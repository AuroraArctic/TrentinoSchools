library(tidyverse)
df = read.csv("../data/trentino.csv")
df
# Change working directory
getwd()
# Libraries
library(tidyverse)
library(spdep)
library(rgdal)
library(sf)
# Import and try to change CRS
# Read municipality data
tn <- readOGR("../data/Limiti01012021_g/Com01012021_g")
# Filter the province of Trento
tn <- tn[tn$COD_PROV == 22, ]
plot(tn, axes = 1)
plot(tn, axes = 1)
tn <- spTransform(tn, CRS("+init=epsg:4326"))
plot(tn, axes = T)
# 01-Import shapefile as SpatialPointsDataFrame
df <- readOGR("../data/Trentino/schools/schools.shp",
verbose = FALSE
)
df@data["long"] <- df@coords[, 1]
df@data["lat"] <- df@coords[, 2]
df <- spTransform(df, CRS("+init=epsg:4326"))
plot(tn, border = "grey", axes = F)
points(df@coords, col = "cornflowerblue", cex = 1, pch = 1)
knn = c()
for(i in 2:10){
knn <- append(knn,
knn2nb(knearneigh(coordinates(df),
k = i,
longlat = T
)))
}
knn[1]
plot(tn, border = "grey90", axis = tn)
plot(knn[1], df@coords, col = "cornflowerblue", lwd=0.2, cex=0.5, add=TRUE)
df@coords
knn[1]
plot(knn[2], df@coords, col = "cornflowerblue", lwd=0.2, cex=0.5, add=TRUE)
knn[2]
knn2nb(knearneigh(coordinates(df),
k = i,
longlat = T
))
plot(knn2nb(knearneigh(coordinates(df),
k = i,
longlat = T
)), df@coords)
######################################
# Contiguity based approach
contnb_q <- poly2nb(tn, queen=T)
contnb_q
plot(tn, border="grey")
plot(contnb_q, df@coords, add=TRUE)
contnb_q
df@coords
######################################
# Get students data
stud_df = read.csv("../data/schools/students.csv")
stud_df
names(stud_df)
# Libraries
library(tidyverse)
library(spdep)
library(rgdal)
library(sf)
# Change working directory
setwd("G:/Il mio Drive/2nd Year/Geospatial/TrentinoSchools/src")
# Import
# Read municipality data
tn <- readOGR("../data/aggregated_data_per_municipality")
# Plot the municipalities in Trentino
plot(tn, axes = 1)
# Import shapefile as SpatialPointsDataFrame
schools <- readOGR("../data/Trentino/schools/schools.shp",
verbose = FALSE
)
# Setting coordinates
schools@data["long"] <- schools@coords[, 1]
schools@data["lat"] <- schools@coords[, 2]
# Changing CRS
schools <- spTransform(schools, CRS("+init=epsg:4326"))
plot(tn, border = "grey", axes = F)
points(schools@coords, col = "cornflowerblue", cex = 1, pch = 1)
######################################
# KNN
coords = unique(coordinates(schools))
munic@data
tn@data
# Read municipality data
tn <- readOGR("../data/aggregated_data_per_municipality", encoding="UTF-8")
# Libraries
library(tidyverse)
library(spdep)
library(rgdal)
library(sf)
library(sp)
library(rgeos)
library(terra)
library(DT)
# Function that creates a palette from
# yellow to red
colours_palette = colorRampPalette(c("#fedb71","#FCD471","#facd71",
"#f6bf70","#eea26f","#EA946F",
"#e6866e","#e2786e","#e0716e","#dd696d"))
# Read municipality data
tn <- readOGR("../data/aggregated_data_per_municipality", encoding="UTF-8")
# Setting the CRS
tn <- spTransform(tn, CRS("+init=epsg:4326"))
# Function to replace NAs with 0
na.zero <- function (x) {
x[is.na(x)] <- 0
return(x)
}
tn
names(tn@data)[3]
names(tn@data)[7]
names(tn@data)[8]
names(tn@data)[9]
names(tn@data)[15]
names(tn@data)
# Read municipality data
tn <- readOGR("../data/aggregated_data_per_municipality", encoding="UTF-8")
# Setting the CRS
tn <- spTransform(tn, CRS("+init=epsg:4326"))
# Function to replace NAs with 0
na.zero <- function (x) {
x[is.na(x)] <- 0
return(x)
}
names(tn@data)[3] = "Scuole"
names(tn@data)[7] = "Media_stud_classe"
names(tn@data)[8] = "Media_stud_scuola"
names(tn@data)[10] = "Pop_under_20"
names(tn@data)[11] = "Pop_under_20_Pop_tot"
names(tn@data)[12] = "Stud_Pop_under_20"
# Replace NAs about municipalities' number of schools with 0s
tn@data$Scuole = na.zero(tn@data$Scuole)
# Plot the municipalities in Trentino
par(mar=c(0,0,0,0))
plot(tn, axes = F, border="grey")
